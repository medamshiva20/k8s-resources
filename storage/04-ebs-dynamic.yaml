apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ebs-sc
provisioner: ebs.csi.aws.com
volumeBindingMode: WaitForFirstConsumer
parameters:
  csi.storage.k8s.io/fstype: xfs
  type: io1
  iopsPerGB: "50"
  encrypted: "true"
reclaimPolicy: Retain
allowVolumeExpansion: true
#Retain: With this policy, the volume is not deleted or modified when the associated PVC is deleted. The administrator is responsible for manually reclaiming or deleting the volume.
#Delete: This policy specifies that the storage resource associated with the PVC should be deleted when the PVC is deleted. This typically means that the underlying storage resource will be removed from the storage backend.
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ebs-dynamic-pvc
spec:
  storageClassName: "ebs-sc"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 6Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels: # these labels belong to deployment
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels: # these labels should match with pod
      app: nginx
      project: roboshop
      component: frontend
  template: # this is the pod definition
    metadata:
      labels:
        app: nginx
        project: roboshop
        component: frontend
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: "/usr/share/nginx/html"
          name: nginx-html
      volumes:
      - name: nginx-html
        persistentVolumeClaim: # this is the PVC
          claimName: ebs-dynamic-pvc